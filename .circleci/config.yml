# Python CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  makeenv_38:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/mapca
    steps:
      - checkout
      - restore_cache:
          key: conda-py38-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Generate environment
          command: |
            if [ ! -d /opt/conda/envs/mapca_py38 ]; then
              conda create -yq -n mapca_py38 python=3.8
              source activate mapca_py38
              pip install .[tests]
            fi
      - save_cache:
          key: conda-py38-v1-{{ checksum "pyproject.toml" }}
          paths:
            - /opt/conda/envs/mapca_py38

  unittest_39:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/mapca
    steps:
      - checkout
      - restore_cache:
          key: conda-py39-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Generate environment
          command: |
            apt-get update
            apt-get install -yqq make
            if [ ! -d /opt/conda/envs/mapca_py39 ]; then
              conda create -yq -n mapca_py39 python=3.9
              source activate mapca_py39
              pip install .[tests]
            fi
      - run:
          name: Running unit tests
          command: |
            source activate mapca_py39
            py.test --ignore mapca/tests/test_integration.py --cov-append --cov-report term-missing --cov=mapca mapca/
            mkdir /tmp/src/coverage
            mv /tmp/src/mapca/.coverage /tmp/src/coverage/.coverage.py39
      - save_cache:
          key: conda-py39-v1-{{ checksum "pyproject.toml" }}
          paths:
            - /opt/conda/envs/mapca_py39
      - persist_to_workspace:
          root: /tmp
          paths:
            - src/coverage/.coverage.py39

  unittest_310:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/mapca
    steps:
      - checkout
      - restore_cache:
          key: conda-py310-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Generate environment
          command: |
            apt-get update
            apt-get install -yqq make
            if [ ! -d /opt/conda/envs/mapca_py310 ]; then
              conda create -yq -n mapca_py310 python=3.10
              source activate mapca_py310
              pip install .[tests]
            fi
      - run:
          name: Running unit tests
          command: |
            source activate mapca_py310
            py.test --ignore mapca/tests/test_integration.py --cov-append --cov-report term-missing --cov=mapca mapca/
            mkdir /tmp/src/coverage
            mv /tmp/src/mapca/.coverage /tmp/src/coverage/.coverage.py310
      - save_cache:
          key: conda-py310-v1-{{ checksum "pyproject.toml" }}
          paths:
            - /opt/conda/envs/mapca_py310
      - persist_to_workspace:
          root: /tmp
          paths:
            - src/coverage/.coverage.py310

  unittest_38:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/mapca
    steps:
      - checkout
      - restore_cache:
          key: conda-py38-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Running unit tests
          command: |
            apt-get update
            apt-get install -y make
            source activate mapca_py38  # depends on makeenv_38
            py.test --ignore mapca/tests/test_integration.py --cov-append --cov-report term-missing --cov=mapca mapca/
            mkdir /tmp/src/coverage
            mv /tmp/src/mapca/.coverage /tmp/src/coverage/.coverage.py38
      - persist_to_workspace:
          root: /tmp
          paths:
            - src/coverage/.coverage.py38

  integrationtest_38:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/mapca
    steps:
      - checkout
      - restore_cache:
          key: conda-py38-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Running unit tests
          command: |
            apt-get update
            apt-get install -y make
            source activate mapca_py38  # depends on makeenv_38
            py.test --log-cli-level=INFO --cov-append --cov-report term-missing --cov=mapca -k test_integration mapca/tests/test_integration.py
            mkdir /tmp/src/coverage
            mv /tmp/src/mapca/.coverage /tmp/src/coverage/.coverage.py38
      - persist_to_workspace:
          root: /tmp
          paths:
            - src/coverage/.coverage.py38

  style_check:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/mapca
    steps:
      - checkout
      - restore_cache:
          key: conda-py38-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Style check
          command: |
            apt-get update
            apt-get install -yqq make
            source activate mapca_py38  # depends on makeenv38
            flake8 mapca

  merge_coverage:
    working_directory: /tmp/src/mapca
    docker:
      - image: continuumio/miniconda3
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - restore_cache:
          key: conda-py38-v1-{{ checksum "pyproject.toml" }}
      - run:
          name: Merge coverage files
          command: |
            apt-get update
            apt-get install -yqq curl
            source activate mapca_py38  # depends on makeenv38
            cd /tmp/src/coverage/
            coverage combine
            coverage xml
      - store_artifacts:
          path: /tmp/src/coverage
      - codecov/upload:
          file: /tmp/src/coverage/coverage.xml

  deploy:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create package
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            pip install twine
            twine upload dist/*

workflows:
  version: 2.1
  build_test:
    jobs:
      - makeenv_38
      - unittest_39
      - unittest_310
      - unittest_38:
          requires:
            - makeenv_38
      - integrationtest_38:
          requires:
            - makeenv_38
      - style_check:
          requires:
            - makeenv_38
      - merge_coverage:
          requires:
            - unittest_38
            - unittest_39
            - unittest_310
      - deploy:
          requires:
            - merge_coverage
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+(?:rc)?(?:[0-9]+)?
            branches:
              ignore: /.*/
